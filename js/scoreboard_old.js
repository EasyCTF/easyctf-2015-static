// Generated by CoffeeScript 1.10.0
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  this.scoreboard_name = "";

  this.load_graph = function() {
    return api_call("GET", "/api/stats/scoregraph").done(function(result) {
      if (result["success"] === 1) {
        window._points = result["data"]["points"];
        window._options = result["data"]["options"];
        return google.load("visualization", "1", {
          packages: ["corechart"],
          callback: function() {
            var chart, data, options;
            data = google.visualization.arrayToDataTable(window._points);
            options = window._options;
            chart = new google.visualization.LineChart(document.getElementById("graph_container"));
            chart.draw(data, options);
            console.log("Done drawing graph.");
            return $("#graph_well").show("fast");
          }
        });
      }
    });
  };

  this.load_scoreboard = function(name, query) {
    window.scoreboard_name = name;
    if (name === "ranked") {
      location.hash = "";
    } else {
      location.hash = "#" + name;
    }
    return $("#scoreboardtable").slideUp("fast", "swing", function() {
      return api_call("GET", "/api/stats/scoreboard", {}).done(function(result) {
        var _group, gmembers, group, html, i, j, len, len1, rank, ref, ref1, ref2, ref3, scores, searchq, show, tabs, team;
        if (result["success"] === 1) {
          tabs = [
            {
              href: "ranked",
              title: "US Teams",
              active: name === "ranked"
            }, {
              href: "all",
              title: "All Teams",
              active: name === "all"
            }
          ];
          _group = null;
          if (indexOf.call(Object.keys(result["data"]), "groups") >= 0) {
            ref = result["data"]["groups"];
            for (i = 0, len = ref.length; i < len; i++) {
              group = ref[i];
              tabs.push({
                href: group["gid"],
                title: group["name"],
                active: name === group["gid"]
              });
              if (name === group["gid"]) {
                _group = group;
              }
            }
          }
          $("#scoreboard_list").html(window.render_tab({
            tabs: tabs
          }));
          scores = result["data"]["scores"];
          html = "";
          searchq = [];
          rank = 1;
          html += "<!-- <tr><td>0</td><td><a href='/team?EasyCTF'>EasyCTF</a></td><td>Various Schools</td><td>Infinity</td></tr> -->";
          for (j = 0, len1 = scores.length; j < len1; j++) {
            team = scores[j];
            show = true;
            if (name === "ranked") {
              show = team.observer === false;
            } else if (name === "all") {
              show = true;
            } else {
              gmembers = _group["members"].map(function(obj) {
                return obj["tid"];
              });
              show = (ref1 = team["tid"], indexOf.call(gmembers, ref1) >= 0);
            }
            if (show) {
              if ((query && query.length > 0 && ((team.teamname.toLowerCase().indexOf(query.toLowerCase())) > -1 || (team.school && (team.school.toLowerCase().indexOf(query.toLowerCase())) > -1))) || !(query && query.length > 0)) {
                html += "<tr" + (team["my_team"] === true ? " class='success'" : "") + ">";
                html += "<td>" + (team.observer ? '<span class="badge">' + rank + '</i></span>' : rank) + "</td>";
                html += "<td><a href=\"/team?" + encodeURIComponent(team.teamname) + "\">" + htmlEntities(team.teamname) + "</a></td>";
                html += "<td>" + (team.school ? htmlEntities(team.school) : '') + "</td>";
                html += "<td><span class='on_hover'>" + (Math.round(team.points)) + "<span class='decimal' style='display:none;color:#999;'>" + (team.points - (Math.round(team.points))) + "</span></span></td>";
                html += "</tr>";
              }
              if (!(ref2 = team.school, indexOf.call(searchq, ref2) >= 0)) {
                searchq.push(team.teamname);
              }
              if (team.school) {
                if (!(ref3 = team.school, indexOf.call(searchq, ref3) >= 0)) {
                  searchq.push(team.school);
                }
              }
              rank += 1;
            }
          }
          $("#scoreboardtable_body").html(html);
          $("#scoreboardtable").slideDown("fast", "swing");
          $("#team_query").typeahead("destroy");
          return $("#team_query").typeahead({
            items: 10,
            minLength: 2,
            source: searchq
          });
        }
      });
    });
  };

  this.search_teams = function() {
    return load_scoreboard(window.scoreboard_name, $("#team_query").val());
  };

  $(function() {
    var initial;
    initial = "ranked";
    if (location.hash.length > 1) {
      initial = location.hash.substr(1);
    }
    window.render_tab = _.template($("#template_tab").remove().text());
    if ((new Date()) > startDate) {
      load_graph();
    }
    load_scoreboard(initial, "");
    $(".on_hover").hover(function() {
      $(this).child(".decimal").toggleClass("hidden_decimal");
      return false;
    });
    return false;
  });

}).call(this);
