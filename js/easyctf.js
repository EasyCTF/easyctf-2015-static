// Generated by CoffeeScript 1.10.0
(function() {
  var message_duration,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.startDate = new Date("03 Nov 2015 20:00:00 GMT-0600");

  window.endDate = new Date("11 Nov 2015 20:00:00 GMT-0600");

  message_duration = 2500;

  this.api_call = function(method, url, data) {
    return $.ajax({});
    if (method === "POST" && $.cookie("token")) {
      data.token = $.cookie("token");
    }
    return $.ajax({
      url: url,
      type: method,
      data: data,
      dataType: "json",
      cache: false
    }).fail(function(jqXHR, text) {
      return $("#site-message").slideUp("fast", "swing", function() {
        $("#site-message").html("<div class='alert alert-danger' style='margin:0;'>" + "<div class='container'>The EasyCTF API server is currently down. We're working on this to fix this error right away. Follow <a href='http://twitter.com/easyctf' target='_blank' style='color:#fff;'>@easyctf</a> for status updates.</div>" + "</div>");
        return $("#site-message").slideDown("fast", "swing");
      });
    });
  };

  this.display_message = function(target, type, message, callback) {
    window._callback = callback;
    return $(target).slideUp("fast", "swing", function() {
      var ref;
      $(target).html("<div class='alert alert-" + type + "'" + ((ref = indexOf.call(target, "#site-message") >= 0) != null ? ref : {
        " style='margin:0'": ""
      }) + ">" + message + "</div>");
      return $(target).slideDown("fast", "swing", function() {
        return setTimeout((function() {
          return $(target).slideUp("fast", "swing", function() {
            $(target).html("");
            if (window._callback) {
              return window._callback();
            }
          });
        }), message_duration);
      });
    });
  };

  this.display_message_permanent = function(target, type, message, callback) {
    window._callback = callback;
    return $(target).slideUp("fast", "swing", function() {
      var ref;
      $(target).html("<div class='alert alert-" + type + "'" + ((ref = indexOf.call(target, "#site-message") >= 0) != null ? ref : {
        " style='margin:0'": ""
      }) + ">" + message + "</div>");
      return $(target).slideDown("fast", "swing", function() {
        if (window._callback) {
          return window._callback();
        }
      });
    });
  };

  this.redirect_if_not_logged_in = function(is_protected) {
    return api_call("GET", "/api/user/info", {}).done(function(result) {
      if (result.success === 0 || (result.data && result.data.logged_in !== true)) {
        return location.href = "/login";
      } else {
        if (is_protected === true) {
          if (!(result.data.type === 0 || new Date() > window.startDate)) {
            return location.href = "/account";
          }
        }
      }
    });
  };

  this.load_navbar = function() {
    return api_call("GET", "/api/user/info", {}).done(function(result) {
      if (result.success === 0 || (result.data && result.data.logged_in !== true)) {
        return $("#nologin-nav").show();
      } else {
        $(".account_link").html("<img src='//www.gravatar.com/avatar/" + result.data.email_hash + "?size=20' class='navatar'>" + result.data.username);
        if (result["data"]["team"] === false) {
          if (result.data.type === 2) {
            return $("#teacher-nav").show();
          } else {
            return $("#noteam-nav").show();
          }
        } else {
          if (((new Date()) > window.startDate && result.data.team && result.data.team.length > 0) || result.data.type === 0) {
            return $("#competition-nav").show();
          } else if (result.data.type === 2) {
            return $("#teacher-nav").show();
          } else {
            return $("#login-nav").show();
          }
        }
      }
    });
  };

  this.getQueryParams = function(qs) {
    var params, re, tokens;
    qs = qs.split('+').join(' ');
    params = {};
    tokens = void 0;
    re = /[?&]?([^=]+)=([^&]*)/g;
    while (tokens = re.exec(qs)) {
      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
    }
    return params;
  };

  this.merge_options = function(obj1, obj2) {
    var attrname;
    var attrname, obj3;
    obj3 = {};
    for (attrname in obj1) {
      obj3[attrname] = obj1[attrname];
    }
    for (attrname in obj2) {
      obj3[attrname] = obj2[attrname];
    }
    return obj3;
  };

  this.load_site_message = function() {
    return "";
  };

  this.escape_ = function(string) {
    return string.replace(/ /g, "&nbsp;");
  };

  this.htmlEntities = function(str) {
    return String(str).replace(/&/g, '&amp;').replace(/\s/g, '&nbsp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
  };

  $.fn.serializeObject = function() {
    var a, o;
    o = {};
    a = this.serializeArray();
    $.each(a, function() {
      if (o[this.name]) {
        if (!o[this.name].push) {
          o[this.name] = [o[this.name]];
        }
        return o[this.name].push(this.value || '');
      } else {
        return o[this.name] = this.value || '';
      }
    });
    return o;
  };

  $(function() {
    var date;
    load_navbar();
    load_site_message();
    date = new Date();
    if (date.getMonth() === 9 && date.getDate() === 11) {
      return load_alt_stylesheet();
    }
  });

}).call(this);
